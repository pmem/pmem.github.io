<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Memory on PMem.io</title><link>https://pmem.io/tags/memory/</link><description>Recent content in Memory on PMem.io</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 25 May 2023 13:46:31 +0200</lastBuildDate><atom:link href="https://pmem.io/tags/memory/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploring the Software Ecosystem for Compute Express Link (CXL) Memory</title><link>https://pmem.io/blog/2023/05/exploring-the-software-ecosystem-for-compute-express-link-cxl-memory/</link><pubDate>Thu, 25 May 2023 13:46:31 +0200</pubDate><guid>https://pmem.io/blog/2023/05/exploring-the-software-ecosystem-for-compute-express-link-cxl-memory/</guid><description>CXL Software ecosystem The Compute Express Link (CXL) is going to be a transformative new technology in the heterogeneous memory space. While the transition from Persistent Memory (PMem) to CXL.mem may seem challenging at first, developers who have optimized their applications for PMem will find that no significant changes may be required. In this article, we will explore the CXL software ecosystem and its compatibility with the established PMem concepts and libraries.</description></item><item><title>Memory Tiering (part 2): Writing Transparent Tiering Solution</title><link>https://pmem.io/blog/2022/06/memory-tiering-part-2-writing-transparent-tiering-solution/</link><pubDate>Wed, 29 Jun 2022 00:00:00 +0200</pubDate><guid>https://pmem.io/blog/2022/06/memory-tiering-part-2-writing-transparent-tiering-solution/</guid><description>This is the second part of the series of articles about memory tiering. The first one explained what memory tiering is and why we need it, the second one will explain some mechanisms behind transparent tiering.
This article is intended for those who would like to learn how tiering/numa balancing or memory profiling solutions work under the hood. We will focus on a high-level overview of how tiering/numa balancing could be designed, instead of dissecting any particular solution.</description></item></channel></rss>